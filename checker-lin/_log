==12686== Memcheck, a memory error detector
==12686== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12686== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12686== Command: _test/bin/test_popen_write ./_test/work/test_33
==12686== Parent PID: 12681
==12686== 
==12686== Invalid write of size 1
==12686==    at 0x4E3CF67: so_fputc (so_stdio.c:127)
==12686==    by 0x4E3D01F: so_fwrite (so_stdio.c:159)
==12686==    by 0x109113: main (test_popen_write.c:67)
==12686==  Address 0x2030333379 is not stack'd, malloc'd or (recently) free'd
==12686== 
==12686== 
==12686== Process terminating with default action of signal 11 (SIGSEGV)
==12686==  Access not within mapped region at address 0x2030333379
==12686==    at 0x4E3CF67: so_fputc (so_stdio.c:127)
==12686==    by 0x4E3D01F: so_fwrite (so_stdio.c:159)
==12686==    by 0x109113: main (test_popen_write.c:67)
==12686==  If you believe this happened as a result of a stack
==12686==  overflow in your program's main thread (unlikely but
==12686==  possible), you can try to increase the size of the
==12686==  main thread stack using the --main-stacksize= flag.
==12686==  The main thread stack size used in this run was 8388608.
==12686== 
==12686== HEAP SUMMARY:
==12686==     in use at exit: 0 bytes in 0 blocks
==12686==   total heap usage: 3 allocs, 3 frees, 1,632 bytes allocated
==12686== 
==12686== All heap blocks were freed -- no leaks are possible
==12686== 
==12686== For counts of detected and suppressed errors, rerun with: -v
==12686== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
